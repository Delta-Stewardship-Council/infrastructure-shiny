---
title: "Bivarite Map"
format: html
---

Here we will try to plot the Risk data and the social vulnerability data in one map by using a Bivarite Map. This kind of map is a Choropleth map that plots two variables by combining two color pallest and creating a grid of gradients.

**Things to keep in mind:**
The two variables have to somewhat be related.

## What we are trying to achive?

Based on the discussion with the group (meetng on 05/16) there are three layers from the RAND model we are going to map:
 - Probability of failure
 - Economic value (Impact to assets + Ecological Impact)
 - Risk (combination of the two layers above)
 
 The second component of this project is including the social vulnerability aspect. This will be calculated by combining different social variables and getting to one indicator. Once we have this data and all the layers that goes into it, we can decide hoe disagregate do we want to present the information.
 
 
 For the purpose of this exercise we will try mapping Risk and Soc Vulnerability in one map.We can then expand the shiny app to be able to choose different layers (is possible).
 
 
## Step 1: Getting mock data ready for plotting

Load Libraries
```{r}

library(dplyr)
library(sf)
library(ggplot2)
library(readr)
library(stringr)
library(here)
library(biscale)
library(cowplot)
library(leaflet)
library(mapview)
library(leafpop)
library(bivariatechoropleths)


```


 Read Data
```{r}

prop_fail_area <- read_sf(here("dashboard-app", "data", "mock_prob_fail_levee_area.shp")) %>% 
  mutate(island_tract = paste0("island_", 1:77)) 

soc_vul_index <- read_csv(here("dashboard-app", "data", "mock_social_vul_index.csv"))

levee_area_data <- prop_fail_area %>% 
  left_join(soc_vul_index, by = "island_tract") %>% 
  mutate(fail_percentile = percent_rank(lev_flr),
         soc_vul_percentile = percent_rank(social_vul),
         lma = str_to_title(lma))

class(levee_area_data)

colnames(levee_area_data)

```
 
 
 Preparing data into biscale object
```{r}
biscale_data <- bi_class(levee_area_data,
                         x = fail_percentile,
                         y = soc_vul_percentile,
                         style = "quantile",
                         dim = 3)
```
 
 
Map
```{r}

## map
bi_map <- ggplot()+
  geom_sf(data = biscale_data,
          mapping = aes(fill = bi_class),
          color = "white",
          size = 0.1,
          show.legend = FALSE)+
  bi_scale_fill(pal = "GrPink", dim = 3) +
  labs(title = "Probability of levee failure and social vulnerability \n on the Delta [MOCK DATA]")+
  bi_theme()

bi_map

## legend
legend <- bi_legend(pal = "GrPink",
                    dim = 3,
                    xlab = "Higher Prob Fail",
                    ylab = "Higher Social Vul",
                    size = 8)

final_plot <- ggdraw() +
  draw_plot(bi_map, 0, 0, 1, 1) +
  draw_plot(legend, 0.2, .65, 0.2, 0.2)

final_plot

```

## Adding base map
```{r}
# 1. Transform CRS
biscale_3857 <- st_transform(biscale_data, 
                         crs = 3857)

st_crs(biscale_3857)


## map with base map --> Not aligning, base map looks either very zoomed in or very zoomed out
bi_map_base <- ggplot(data = biscale_3857)+
  ggspatial::annotation_map_tile(type = "osm", zoom = 3)+
  geom_sf(mapping = aes(fill = bi_class),
          color = "white",
          size = 0.1,
          show.legend = FALSE)+
  bi_scale_fill(pal = "GrPink", dim = 3) +
  labs(title = "Probability of levee failure and social vulnerability \n on the Delta [prototype]")+
  bi_theme()

bi_map_base

## legend
legend <- bi_legend(pal = "GrPink",
                    dim = 3,
                    xlab = "Higher Prob Fail",
                    ylab = "Higher Social Vul",
                    size = 8)

final_plot_base <- ggdraw() +
  draw_plot(bi_map_base, 0, 0, 1, 1) +
  draw_plot(legend, 0.2, .65, 0.2, 0.2)

final_plot_base



```




## Mapping with leaflet
```{r}
st_crs(levee_area_data) #NAD83 / California Albers

fail_soc_wgs84 <- levee_area_data %>% 
  st_transform(crs = 4326) 


island_labels <- paste0(
  "Island Name:"
  , fail_soc_wgs84$lma
  , "<br>"
  , "Soc Vul"
  , fail_soc_wgs84$social_vul
)

labels <- sprintf(
  "<strong>%s</strong><br/><strong>Social Vul </strong>%g ",
fail_soc_wgs84$lma, fail_soc_wgs84$social_vul) %>% 
lapply(htmltools::HTML)

## Normal choropleth plotting percentile of prob of fail
leaflet() %>%
    addProviderTiles("CartoDB.Positron") %>%
    setView(lat=38.1, lng=-121.8, zoom=10) %>% 
    addPolygons(data = fail_soc_wgs84, 
                weight = 2,
                fillColor = ~pal(fail_percentile),
                opacity = 1,
                color = "white",
                fillOpacity = 0.7,
                label = labels)

## Using example code below to make leaflet map bivariate

leaflet::leaflet() %>%
  addProviderTiles("CartoDB.Positron") %>%
  setView(lat=38.2, lng=-121.7, zoom=9) %>% 
   bivariatechoropleths::addBivariateChoropleth(
     map_data = fail_soc_wgs84,
     var1_name = fail_percentile,
     var2_name = soc_vul_percentile,
     ntiles= 3,
     var1_label = "Probability of Failure",
     var2_label = "Social Vulnerability Index",
     region_name = "lma",
     weight = 1,
     fillOpacity = 0.7,
     color = "grey",
     highlightOptions = leaflet::highlightOptions(color = "orange",
                                                  weight = 2,
                                                  opacity = 1)) 
                                                 

```



```{r}
## Bivariate choroplth example code

leaflet::leaflet() %>% 
   leaflet::addTiles() %>%
   bivariatechoropleths::addBivariateChoropleth(
     map_data = bivariatechoropleths::renfrew_county,
     var1_name = pop_2016,
     var2_name = median_household_income_2015,
     ntiles= 3,
     var1_label = "Population, 2016",
     var2_label = "Median Household\nIncome, 2015",
     region_name = "CSDNAME",
     weight = 1,
     fillOpacity = 0.7,
     color = "grey",
     highlightOptions = leaflet::highlightOptions(color = "orange",
                                                  weight = 2,
                                                  opacity = 1)) 
```

 

